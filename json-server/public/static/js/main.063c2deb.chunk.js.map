{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/AboutComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/feedbacks.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","to","id","width","CardImgOverlay","Menu","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","alert","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","size","offset","check","checkbox","onChange","handleInputChange","select","textarea","rows","Button","type","color","Component","RenderDish","top","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","state","isModalOpen","toggleModal","setState","value","rating","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","DishDetail","RenderLeader","Media","object","heading","About","leaders","CardHeader","title","list","Header","isNavOpen","toggleNav","handleLogin","event","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newFeedback","toISOString","fetch","method","body","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","newComment","addComment","actions","reset","addLeaders","Dishes","action","Comments","concat","Promotions","Leaders","Feedbacks","feedbacks","feedback","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.063c2deb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading...</p>\r\n        </div>\r\n    )\r\n}","export const baseUrl= 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}){\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>\r\n                            {item.name}\r\n                        </CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n            \r\n        );\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                    isLoading={props.dishesLoading}\r\n                    errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} \r\n                    isLoading={props.promosLoading}\r\n                    errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                    isLoading={props.leadersLoading}\r\n                    errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n function RenderMenuItem({dish})  {\r\n     return(\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link> \r\n        </Card>\r\n     );\r\n}\r\n    \r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if(props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );   \r\n    }\r\n        \r\n    \r\n\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row,} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        alert(\"Current State is: \" + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n    \r\n    render(){\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/home'>Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>\r\n                            Contact Us\r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                     </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-container\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\" \r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" \r\n                                        name=\"lastname\"\r\n                                        placeholder=\"Last Name\" \r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                        />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                     />\r\n                                     <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                onChange={this.handleInputChange} />{' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\"\r\n                                        onChange={this.handleInputChange}>\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".textarea\" id=\"message\" name=\"message\"\r\n                                        className=\"form-control\"\r\n                                        rows=\"12\"\r\n                                        onChange={this.handleInputChange} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                            <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>  \r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport {Card, CardImg, CardTitle, CardText, CardBody, \r\n    Breadcrumb, BreadcrumbItem, Button, Modal,\r\n    ModalHeader,ModalBody, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n    function RenderDish({dish}) {\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                    <Card>\r\n                        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody> \r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId}) {\r\n        if(comments != null) { \r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        <Stagger in>\r\n                            {comments.map((comment) => {\r\n                            return(\r\n                                <Fade in>\r\n                                    <li key={comment.id}>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                    </li>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                        </Stagger>\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n                </div>    \r\n            );\r\n        }\r\n        else{\r\n            return <div />\r\n        }\r\n    }\r\n\r\n    const DishDetail = (props)  => {\r\n        if (props.isLoading){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        if (props.dish != null){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to='/menu'>Menu</Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>\r\n                                {props.dish.name}\r\n                            </BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>\r\n                </div>\r\n                    <div className=\"row\">    \r\n                        <RenderDish dish={props.dish} />\r\n                        <RenderComments comments={props.comments}\r\n                        postComment = {props.postComment}\r\n                        dishId={props.dish.id} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return <div />\r\n        }    \r\n    }\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(value) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, value.rating, value.author, value.comment);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-fw\"></span> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={this.handleSubmit}>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                                <Col md={10}>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                        </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={2}>Your Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\" \r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={2}>Comment</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        className=\"form-control\"\r\n                                        rows=\"6\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                            <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default DishDetail;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}) {\r\n    return(\r\n        <Media>\r\n            <Media>\r\n                <Media object src={baseUrl + leader.image} alt={leader.name} className=\"m-4\" />\r\n            </Media>\r\n            <Media>\r\n                <CardBody>\r\n                    <Media heading>{leader.name}</Media>\r\n                    <p>{leader.designation}</p>\r\n                    <p>{leader.description}</p>\r\n                </CardBody>\r\n            </Media>\r\n        </Media>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <div key={leader.id} className=\"col-12 m-1\">\r\n                <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                    <RenderLeader leader={leader} />\r\n                </FadeTransform>\r\n            </div>\r\n        );\r\n    });\r\n    if(props.leaders.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.leaders.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.leaders.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                        I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Media list>\r\n                            {leaders}\r\n                        </Media>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default About; ","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler,\r\n    NavItem, Collapse, Jumbotron, Button, Modal,\r\n    ModalHeader,ModalBody, FormGroup, Input, Label,\r\n    Form} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this)\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n        this.handleLogin = this.handleLogin.bind(this)\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \r\n            \"Password: \" + this.password.value + \r\n            \"Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                                alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                innerRef={(input) => this.username =input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                innerRef={(input) => this.password =input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember =input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\"  className=\"bg-pimary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <div className=\"footer\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">             \r\n                        <div className=\"col-4 offset-1 col-sm-2\">\r\n                            <h5>Links</h5>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li><Link to=\"/home\">Home</Link></li>\r\n                                <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                                <li><Link to=\"/menu\">Menu</Link></li>\r\n                                <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-7 col-sm-5\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                                confusion@food.net</a>\r\n                            </address>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-4 align-self-center\">\r\n                            <div className=\"text-center\">\r\n                                <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                                <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">             \r\n                        <div className=\"col-auto\">\r\n                            <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { console.log('Post comments ', error.message)\r\n        alert('Your comment could not be posted\\nError: ' + error.message);})\r\n}\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addFeedback(response)))\r\n    .catch(error => { console.log('Post feedback ', error.message)\r\n        alert('Your feedback could not be posted\\nError: ' + error.message);})\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n            .then(response => response.json())\r\n            .then(dishes => dispatch(addDishes(dishes)))\r\n            .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n//111111111111111111111111111111111111\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n            .then(response => response.json())\r\n            .then(leaders => dispatch(addLeaders(leaders)))\r\n            .catch(error => dispatch(leadersFailed(error.message)));\r\n}","export const ADD_COMMENT='ADD_COMMENT';\r\nexport const ADD_FEEDBACK='ADD_FEEDBACK';\r\nexport const DISHES_LOADING='DISHES_LOADING';\r\nexport const DISHES_FAILED='ISHES_FAILED';\r\nexport const ADD_DISHES='ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED ='COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS ='ADD_PROMOS';\r\nexport const PROMOS_FAILED ='PROMOS_FAILED';\r\nexport const LEADERS_LOADING='LEADERS_LOADING';\r\nexport const ADD_LEADERS ='ADD_LEADERS';\r\nexport const LEADERS_FAILED='LEADERS_FAILED';\r\n","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport About from './AboutComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition} from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n    }     \r\n}\r\n\r\nconst mapDispatchProps = (dispatch) => ({\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => { dispatch(fetchComments())},\r\n  fetchPromos: () => { dispatch(fetchPromos())},\r\n  fetchLeaders: () => {dispatch(fetchLeaders())}\r\n});\r\n\r\n class Main extends Component {\r\n\r\n   componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders(); \r\n   }\r\n\r\n   render(){\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess} \r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]} \r\n          promosLoading={this.props.promotions.isLoading}\r\n          promosErrMess={this.props.promotions.errMess} \r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leadersLoading={this.props.leaders.isLoading}\r\n          leadersErrMess={this.props.leaders.errMess} \r\n        />\r\n      )\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment = {this.props.postComment}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n              <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n   }\r\n  \r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state ={\r\n        errMess: null,\r\n        comments: []\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n        \r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\r\n            \r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        promotions: []\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []};\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, promotions: []};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        leaders: []\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []};\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders: []};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Feedbacks = (state ={\r\n        errMess: null,\r\n        feedbacks: []\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_FEEDBACK:\r\n            var feedback = action.payload;\r\n            return {...state, feedbacks: state.feedbacks.concat(feedback)};\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\n class App extends Component {\n   \n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider> \n    );\n   }\n  \n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { Feedbacks } from './feedbacks';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            leaders: Leaders,\r\n            promotions: Promotions,\r\n            feedbacks: Feedbacks,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            }) \r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}